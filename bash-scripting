First line of a bash script:

#!/bin/bash

- The shebang #! tells the system which interpreter to use to run the script.
- /bin/bash is the path of the Bash interpreter so Bash is used to interpret this script.

---

Executing scripts:

./script.sh
sh script.sh
bash script.sh

Scripts require execute permissons.

---

Comments:

# is used for single line comments
: '' is used for multi-line comments. The comment is enclosed within '' and can span multiple lines.

---

Running Scripts from any location in a terminal.

- When executing a script it is required to be in the directory of the script or specify the path to the script.
- To execute a script from anywhere the script should be added to any directory specified in the $PATH variable.

---

Variables:

variableName=value

Variables are accessed using $
example: echo $variableName

---

Parameters:
Each parameter is referenced with $ and the order the parameter was passed.

./parameters.sh Hello World!

1st parameter: $1 (Hello)
2nd parameter: $2 (World!)
All parameters: $@ (Hello World!)

---

Arithmetic operations:

sum=$((num1+num2))

- Requires $ followed by double brackets.

---

if statements:

if [ CONDITION ] 
then
	# Code block
fi

---

if else statements:

if [CONDITION]
then
	# Code executed if condition is true.
else
	# Code executed if condition is false.
fi

---

elif statements:

if [CONDITION]
then 
        # Code executed if condition is true.
elif [CONDITION] 
then
        # Code executed if first if statement is false but second is true.
fi

---

Nested if statements:

if [CONDITION]; then 
        # Code executed if condition is true.
	if [CONDITION]; then
		# Code executed the nested if condition is true.
	else
       		# Code executed the  nested if condition is false.
	fi
else
	# Code executed if condition is false.
fi

---

while loop:

while [CONDITION]
do
	# Code executed while condition is true.
done

---

for loop:

for (( i=x; i<y; i++ ))
do
	# Code to be executed while value of i is less than y
done

---

for loop with seq:

for variableName in $(seq x y)
do 
	# Code to be executed.
done

- Simpler syntax.
- variableName istantiated in the for loop.
- variableName begins with value x and completes last iteration with value y.

---

break and continue:

break - exits a loop. If in a nested loop it exits the inner most loop.
break n - exits n levels of loops.

continue - skips remaining code in a loop and continues to the next iteration of the loop.

---

